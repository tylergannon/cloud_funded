%p#notice= notice

.article
  %h1= @article.title
  .article_header= "Published #{@article.published_at.strftime("%b %d, %Y")} by #{@article.author.full_name}"
  .body!= @article.body

  .clear
  .share
    %a{name: 'fb_share'}
  .like
    .fb-like{'data-href' => blog_post_url(@article), 'data-send' => true, 'data-width' => '450', 'data-show-faces' => true}
  .clear
  .author Find #{@article.author.full_name} on #{link_to 'Google', "https://plus.google.com/#{@article.author.google_plus}?rel=author"}
  #comments
    = render(partial: 'comments/comment', collection: @article.comments) || render(partial: 'no_comments')
  - if member_signed_in?
    .new_comment
      = form_for [@article, @article.comments.build(member: current_member)], remote: true do |f|
        = f.hidden_field :member_id
        = f.text_area :body
        #recaptcha_container
          = recaptcha_tags
        = f.submit "Comment"
  - else
    %h3= link_to 'Sign in to comment on this article!', new_member_session_path
    = link_to member_omniauth_authorize_path(:facebook) do
      = image_tag 'Button_FBConnect.png'
    


= content_for :head do
  %meta{property: 'fb:app_id', content: facebook_app_id}
  %meta{property: 'og:type', content: 'article'}
  %meta{property: 'og:title', content: @article.title}
  - @article.attachments.each do |attachment|
    %meta{property: 'og:image', content: attachment.image.url(:original, false)}
  %meta{property: 'og:description', content: @article.description}
  %meta{property: 'og:url', content: blog_post_url(@article)}
